@model ClinicAutimation.Models.LoginViewModel

<style>
    body, html {
        height: 100%;
        margin: 0;
        font-family: 'Poppins', sans-serif;
    }

    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
        margin-left: 200px;
        margin-right: 100px;
    }

    .login-form {
        max-width: 400px;
        padding: 40px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-size: 16px;
    }

    input[type="text"],
    input[type="password"] {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    input[type="submit"] {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }

        input[type="submit"]:hover {
            background-color: #0056b3;
        }
</style>

<div class="container">
    <div class="login-form">
        <h2>Chemist Login</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(m => m.UserName, "Username:")
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UserName)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, "Password:")
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="form-group">
                <input type="submit" value="Log in" />
            </div>
        }
    </div>
</div>
