@model CinicAutomation.Models.LoginModel

@{
    ViewBag.Title = "Login";
}

<nav class="navbar navbar-primary-custom" style="background-color: #007bff;">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" href="#" style="color: white;">WebSiteName</a>
        </div>
        <ul class="nav navbar-nav">
            <li class="active"><a href="#" style="color: white;">Home</a></li>
            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" style="color: white;">Page 1 <span class="caret"></span></a>
                <ul class="dropdown-menu">
                    <li><a href="#" style="color: white;">Page 1-1</a></li>
                    <li><a href="#" style="color: white;">Page 1-2</a></li>
                    <li><a href="#" style="color: white;">Page 1-3</a></li>
                </ul>
            </li>
            <li><a href="#" style="color: white;">Page 2</a></li>
            <li><a href="#" style="color: white;">Page 3</a></li>
        </ul>
    </div>
</nav>



<h2>User Login</h2>
@*----------------------------------------------------------------------------------------------------------------*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>LoginModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LoginId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.patientFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.patientFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.patientFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.physicianFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.physicianFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.physicianFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chemistFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chemistFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chemistFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.adminFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adminFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adminFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.supplierFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.supplierFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.supplierFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.roleFk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.roleFk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.roleFk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
